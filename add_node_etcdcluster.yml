# В начале плейбука мы определяем переменные, которые будут использоваться в дальнейшем
- name: Add new node to etcd cluster
  hosts: all
  become: yes
  vars_files:
    - vars/main.yml
    - vars/system.yml
  vars:
    etcd_config_template: /roles/etcd/templates/etcd.conf_new.j2
    etcd_peer_port: 2380
    etcd_client_port: 2379
    # etcd_data_dir: /var/lib/etcd/
    # etcd_cluster_token: my-etcd-cluster
    etcd_cluster_state: existing
    etcd_cluster_nodes: "[{\"name\": \"pgnode01\", \"ip\": \"192.168.171.101\"}, {\"name\": \"pgnode02\", \"ip\": \"192.168.171.102\"}, {\"name\": \"pgnode03\", \"ip\": \"192.168.171.103\"}]"
    etcd_tls_cert_file: /etc/etcd/server.crt
    etcd_tls_key_file: /etc/etcd/server.key
    etcd_tls_ca_file: /etc/etcd/ca.crt

# Установка etcd

# В следующем таске мы устанавливаем etcd на новую ноду:

  tasks:
    # Установка etcd
    - name: Install etcd
      apt:
        name: etcd
        update_cache: yes
        state: latest
# Конфигурация etcd

# Затем мы создаём конфигурационный файл etcd.service с помощью модуля copy, содержащий настройки для текущей ноды:

    # Создание конфигурационного файла etcd.service
    - name: Create systemd configuration for etcd
      copy:
        dest: "/etc/systemd/system/etcd.service"
        content: |
          [Unit]
          Description=Etcd Server
          After=network.target

          [Service]
          User=root
          Type=notify
          ExecStart=/usr/bin/etcd \\
          --name={{ inventory_hostname }} \\
          --data-dir={{ etcd_data_dir }} \\
          --initial-advertise-peer-urls=https://{{ inventory_hostname }}:{{ etcd_peer_port }} \\
          --listen-peer-urls=https://{{ inventory_hostname }}:{{ etcd_peer_port }} \\
          --listen-client-urls=https://{{ inventory_hostname }}:{{ etcd_client_port }},http://127.0.0.1:2379 \\
          --advertise-client-urls=https://{{ inventory_hostname }}:{{ etcd_client_port }} \\
          --initial-cluster-token={{ etcd_cluster_token }} \\
          --initial-cluster-state={{ etcd_cluster_state }} \\
          --initial-cluster="{{ etcd_cluster_nodes }}" \\
          --client-cert-auth \\
          --cert-file={{ etcd_tls_cert_file }} \\
          --key-file={{ etcd_tls_key_file }} \\
          --trusted-ca-file={{ etcd_tls_ca_file }} \\
          --peer-client-cert-auth \\
          --peer-cert-file={{ etcd_tls_cert_file }} \\
          --peer-key-file={{ etcd_tls_key_file }} \\
          --peer-trusted-ca-file={{ etcd_tls_ca_file }}
          Restart=on-failure
          RestartSec=10s

        # Здесь мы определяем название текущей ноды name, директорию для хранения данных data-dir, 
        # адреса для общения между нодами initial-advertise-peer-urls и listen-peer-urls, адрес и порт для обслуживания 
        # клиентов listen-client-urls и advertise-client-urls, токен кластера initial-cluster-token, 
        # состояние кластера initial-cluster-state и список нод кластера initial-cluster, а также опции для TLS-шифрования общения.

# Затем мы запускаем etcd и добавляем сервис в автозагрузку:

    # Запуск etcd
    - name: Start etcd service
      systemd:
        name: etcd
        enabled: yes
        state: started
